Before and during this course, I have used AI tools such as ChatGPT and GitHub Copilot to supplement my understanding of programming concepts and to troubleshoot complex coding problems.
Early in the semester, AI served primarily as a tutor—clarifying unclear topics, explaining Java syntax, and helping me translate theoretical concepts into practical code structures.
As the projects grew larger, I began using AI for more advanced support, such as debugging logic errors, improving code readability, and learning best practices for version control and modular design. 
These tools effectively bridged the gap between classroom instruction and hands-on implementation by providing instant feedback and targeted examples.
However, I also encountered limitations. 
AI sometimes produced overly generic or inaccurate responses that required additional verification through documentation or experimentation.
Relying too heavily on it could also dull my problem-solving instincts if I wasn’t careful to understand the reasoning behind the solutions. 
Looking ahead, I expect AI to remain an essential part of my workflow—acting as both a research assistant and coding partner. 
Academically, it will help me learn faster and think more critically by challenging AI-generated answers. Professionally, I anticipate using AI to automate repetitive tasks, accelerate development, and improve productivity, while maintaining human oversight and creativity as the foundation of my problem-solving process.